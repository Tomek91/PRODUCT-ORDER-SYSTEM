package pl.com.app.exceptions;



public enum EErrorsMessage {
    VALIDATION_NAME_ERROR("VALIDATION NAME ERROR"),
    VALIDATION_SURNAME_ERROR("VALIDATION SURNAME ERROR"),
    VALIDATION_QUANTITY_ERROR("VALIDATION QUANTITY ERROR"),
    VALIDATION_BIRTHDATE_ERROR("VALIDATION BIRTHDATE ERROR"),
    VALIDATION_DISCOUNT_ERROR("VALIDATION DISCOUNT ERROR"),
    VALIDATION_ORDER_DATE_ERROR("VALIDATION ORDER DATE ERROR"),
    ADD_OR_UPDATE_EXCEPTION("ADD OR UPDATE EXCEPTION"),
    ADD_ALL_EXCEPTION("ADD ALL EXCEPTION"),
    DELETE_EXCEPTION("DELETE EXCEPTION"),
    DELETE_ALL_EXCEPTION("DELETE ALL EXCEPTION"),
    FIND_BY_ID_EXCEPTION("FIND BY ID EXCEPTION"),
    FIND_ALL_EXCEPTION("FIND ALL EXCEPTION"),
    FIND_BY_NAME_SURNAME_EXCEPTION("FIND BY NAME SURNAME EXCEPTION"),
    FIND_BY_NAME_EXCEPTION("FIND BY NAME EXCEPTION"),
    ADD_OR_UPDATE_ROLLBACK_EXCEPTION("ADD OR UPDATE ROLLBACK EXCEPTION"),
    ADD_ALL_ROLLBACK_EXCEPTION("ADD ALL ROLLBACK EXCEPTION"),
    DELETE_ROLLBACK_EXCEPTION("DELETE ROLLBACK EXCEPTION"),
    DELETE_ALL_ROLLBACK_EXCEPTION("DELETE ALL ROLLBACK EXCEPTION"),
    FIND_BY_ID_ROLLBACK_EXCEPTION("FIND BY ID ROLLBACK EXCEPTION"),
    FIND_ALL_ROLLBACK_EXCEPTION("FIND ALL ROLLBACK EXCEPTION"),
    FIND_BY_NAME_SURNAME_ROLLBACK_EXCEPTION("FIND BY NAME SURNAME ROLLBACK EXCEPTION"),
    FIND_BY_NAME_ROLLBACK_EXCEPTION("FIND BY NAME ROLLBACK EXCEPTION"),
    GET_TABLE_NAME_GENERATED_THE_MOST_ERRORS("GET TABLE NAME GENERATED THE MOST ERRORS"),
    GET_DATE_GENERATED_THE_MOST_ERRORS("GET DATE GENERATED THE MOST ERRORS"),
    GET_MESSAGE_GENERATED_THE_MOST_ERRORS("GET MESSAGE GENERATED THE MOST ERRORS"),
    GET_PRODUCTS_INFO_WITH_MAX_PRICE_BY_CATEGORY("GET PRODUCTS INFO WITH MAX PRICE BY CATEGORY"),
    GET_PRODUCTS_ORDERS_BY_CUSTOMERS_WITH_COUNTRY_AND_AGE("GET PRODUCTS ORDERS BY CUSTOMERS WITH COUNTRIES AND AGE"),
    GET_PRODUCTS_WITH_GUARANTEE_AND_COMPONENTS("GET PRODUCTS WITH GUARANTEE AND COMPONENTS"),
    SHOPS_AND_PRODUCTS_WITH_DIFF_COUNTRIES("SHOPS AND PRODUCTS WITH DIFF COUNTRIES"),
    GET_PRODUCERS_WITH_TRADE_NAME_AND_SUM_OF_QUANTITY("GET PRODUCERS WITH TRADE NAME AND SUM OF QUANTITY"),
    GET_CUSTOMERS_ORDERS_WITH_DATES_AND_PRICE_MORE_THAN("GET CUSTOMERS ORDERS WITH DATES AND PRICE MORE THAN"),
    GET_PRODUCTS_BY_CUSTOMER("GET PRODUCTS BY CUSTOMER"),
    PRODUCT_AND_CUSTOMER_WITH_THE_SAME_COUNTRY("PRODUCT AND CUSTOMER WITH THE SAME COUNTRIES"),
    GET_CUSTOMER_WITH_NAME_SURNAME_AND_COUNTRY_NAME("GET CUSTOMER WITH NAME SURNAME AND COUNTRIES NAME"),
    GET_PRODUCER_WITH_NAME_TRADE_AND_COUNTRY_NAME("GET PRODUCER WITH NAME TRADE AND COUNTRIES NAME"),
    GET_PRODUCT_WITH_NAME_CATEGORY_AND_PRODUCER("GET PRODUCT WITH NAME CATEGORY AND PRODUCER"),
    GET_SHOP_WITH_NAME_AND_COUNTRY("GET SHOP WITH NAME AND COUNTRIES"),
    FIND_BY_PRODUCTID_AND_SHOPID_EXCEPTION("FIND BY PRODUCTID AND SHOPID EXCEPTION"),
    GET_COUNTRY_WITH_NAME("GET COUNTRIES WITH NAME"),
    GET_STOCK_WITH_PRODUCT_AND_SHOP("GET STOCK WITH PRODUCT AND SHOP"),
    GET_PRODUCT_BY_NAME_AND_CATEGORY_NAME("GET PRODUCT BY NAME AND CATEGORY NAME"),
    GET_PRODUCT_BY_NAME_CATEGORY_PRODUCER_TRADE_AND_COUNTRY("GET PRODUCT BY NAME CATEGORY PRODUCER TRADE_AND COUNTRY"),
    GET_PAYMENT_WITH_NAME("GET PAYMENT WITH NAME"),
    ADD_ERROR_EXCEPTION("ADD ERROR EXCEPTION"),
    ADD_CUSTOMER_EXCEPTION("ADD CUSTOMER EXCEPTION"),
    ADD_PRODUCER_EXCEPTION("ADD PRODUCER EXCEPTION"),
    ADD_PRODUCT_EXCEPTION("ADD PRODUCT EXCEPTION"),
    ADD_STOCK_EXCEPTION("ADD STOCK EXCEPTION"),
    ADD_CUSTOMER_ORDER_EXCEPTION("ADD CUSTOMER ORDER EXCEPTION"),
    PARSER_JSON_TO_MODEL("PARSER JSON TO MODEL"),
    PARSER_MODEL_TO_JSON("PARSER MODEL TO JSON"),
    DATA_INITIALIZATION_EXCEPTION("DATA INITIALIZATION EXCEPTION"),
    FILE_PARSE_EXCEPTION("FILE PARSE EXCEPTION"),
    FILE_SAVE_EXCEPTION("FILE SAVE EXCEPTION"),
    MENU_IS_NULL("MENU IS NULL"),
    BIGDECIMAL_PARSE_ERROR("BIGDECIMAL PARSE ERROR"),
    INTEGER_PARSE_ERROR("INTEGER PARSE ERROR"),
    DATE_PARSE_ERROR("DATE PARSE ERROR"),
    EGUARANTEE_PARSE_ERROR("EGUARANTEE PARSE ERROR"),
    EPAYMENT_PARSE_ERROR("EPAYMENT PARSE ERROR");



    private final String code;

    public String getCode() {
        return code;
    }

    EErrorsMessage(String code) {
        this.code = code;
    }
}
